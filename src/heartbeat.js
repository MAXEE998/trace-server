'use strict'; // code generated by pbf v3.2.1

// SendEntry ========================================

var SendEntry = exports.SendEntry = {};

SendEntry.read = function (pbf, end) {
    return pbf.readFields(SendEntry._readField, {to: 0, seq: 0, t_sent: 0}, end);
};
SendEntry._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.to = pbf.readVarint();
    else if (tag === 2) obj.seq = pbf.readVarint();
    else if (tag === 3) obj.t_sent = pbf.readVarint();
};
SendEntry.write = function (obj, pbf) {
    if (obj.to) pbf.writeVarintField(1, obj.to);
    if (obj.seq) pbf.writeVarintField(2, obj.seq);
    if (obj.t_sent) pbf.writeVarintField(3, obj.t_sent);
};

// ReceiveEntry ========================================

var ReceiveEntry = exports.ReceiveEntry = {};

ReceiveEntry.read = function (pbf, end) {
    return pbf.readFields(ReceiveEntry._readField, {from: 0, seq: 0, t_sent: 0, t_received: 0, hops: 0}, end);
};
ReceiveEntry._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.from = pbf.readVarint();
    else if (tag === 2) obj.seq = pbf.readVarint();
    else if (tag === 3) obj.t_sent = pbf.readVarint();
    else if (tag === 4) obj.t_received = pbf.readVarint();
    else if (tag === 5) obj.hops = pbf.readVarint();
};
ReceiveEntry.write = function (obj, pbf) {
    if (obj.from) pbf.writeVarintField(1, obj.from);
    if (obj.seq) pbf.writeVarintField(2, obj.seq);
    if (obj.t_sent) pbf.writeVarintField(3, obj.t_sent);
    if (obj.t_received) pbf.writeVarintField(4, obj.t_received);
    if (obj.hops) pbf.writeVarintField(5, obj.hops);
};

// SendLog ========================================

var SendLog = exports.SendLog = {};

SendLog.read = function (pbf, end) {
    return pbf.readFields(SendLog._readField, {entries: []}, end);
};
SendLog._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.entries.push(SendEntry.read(pbf, pbf.readVarint() + pbf.pos));
};
SendLog.write = function (obj, pbf) {
    if (obj.entries) for (var i = 0; i < obj.entries.length; i++) pbf.writeMessage(1, SendEntry.write, obj.entries[i]);
};

// ReceiveLog ========================================

var ReceiveLog = exports.ReceiveLog = {};

ReceiveLog.read = function (pbf, end) {
    return pbf.readFields(ReceiveLog._readField, {entries: []}, end);
};
ReceiveLog._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.entries.push(ReceiveLog.read(pbf, pbf.readVarint() + pbf.pos));
};
ReceiveLog.write = function (obj, pbf) {
    if (obj.entries) for (var i = 0; i < obj.entries.length; i++) pbf.writeMessage(1, ReceiveLog.write, obj.entries[i]);
};
